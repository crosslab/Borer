##############################################################
# $CINTSYSDIR/src/Makefile.base.sgi
#
# Description:
#   This file is a base of cint library makefile. There are examples
#  of platform dependent setup information under platform
#  directory. Do following to create a complete Makefile,
#
#  $ cat ../platform/[YourPlatform] Makefile.base > Makefile
#
##############################################################
CINT_V6     = bc_autoobj.o bc_cfunc.o bc_inst.o bc_parse.o bc_reader.o bc_type.o bc_exec.o bc_vtbl.o bc_eh.o bc_debug.o bc_assign.o

CINTSYSDIR   = ..
IPATH    = -I.. $(SYSIPATH)
MACRO    = $(SYSMACRO) $(OTHMACRO) 

############################################################################
# common variable definition 
############################################################################

SECURITYH =     security.h
DLLREVH =       dllrev.h

HEADERS =       common.h global.h fproto.h memtest.h sunos.h ../G__ci.h 

OBJECTS = 	$(PLATFORM) \
		$(STDLIBS) \
		$(APIO) \
		v6_auxu.o \
		v6_cast.o \
		v6_debug.o \
		v6_decl.o \
		v6_disp.o \
		v6_dump.o \
		v6_end.o \
		v6_error.o \
		v6_expr.o \
		v6_fread.o \
		v6_func.o \
		v6_gcoll.o \
		v6_global1.o \
		v6_global2.o \
		g__c_func.o \
		v6_ifunc.o \
		v6_inherit.o \
		v6_init.o \
		v6_input.o \
		v6_intrpt.o \
		v6_loadfile.o \
		v6_macro.o \
		v6_malloc.o \
		v6_memtest.o \
		v6_new.o \
		v6_newlink.o \
		v6_oldlink.o \
		v6_opr.o \
		v6_parse.o \
		v6_pause.o \
		v6_pcode.o \
		v6_pragma.o \
		v6_quote.o \
		v6_scrupto.o \
		v6_shl.o \
		v6_sizeof.o \
		v6_struct.o \
		v6_stub.o \
		v6_tmplt.o \
		v6_typedef.o \
		v6_val2a.o \
		v6_value.o \
		v6_var.o

$(CINTLIB) : $(OBJECTS)
	$(AR) $(AROPT) $@ $(OBJECTS)
	$(RANLIB) $(CINTLIB)

############################################################################
# iostream library
############################################################################
libstrm.o : libstrm.cxx libstrm.h $(HEADERS)
	$(CPP) -I../lib/stream $(IPATH) $(MACRO) $(OPTIMIZE) -c libstrm.cxx

v6_dmystrm.o : v6_dmystrm.cxx $(HEADERS)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_dmystrm.cxx

# Visual C++
vcstrm.o : vcstrm.cxx vcstrm.h $(HEADERS)
	$(CPP) -I../lib/vcstream $(IPATH) $(MACRO) $(OPTIMIZE) -c vcstrm.cxx

# Borland C++
bcstrm.o : bcstrm.cxx bcstrm.h $(HEADERS)
	$(CPP) -I../lib/bcstream $(IPATH) $(MACRO) $(OPTIMIZE) -c bcstrm.cxx

############################################################################
# SunOS 4.1 specific source
############################################################################
v6_sunos.o : v6_sunos.cxx $(HEADERS)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -DNONANSI -c v6_sunos.cxx

############################################################################
# NewsOS specific source
############################################################################
v6_new.os.o : v6_new.os.c $(HEADERS)
	$(CC) $(IPATH) $(MACRO) $(OPTIMIZE) -DNONANSI -c v6_new.os.c

############################################################################
# Windows-NT specific source
############################################################################
v6_winnt.o : v6_winnt.cxx $(HEADERS)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_winnt.cxx

############################################################################
# v6_input.cxx depends on GNU readline library
############################################################################
v6_input.o : v6_input.cxx $(HEADERS)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -DG__GNUREADLINE -c v6_input.cxx 
#	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_input.cxx

############################################################################
# lconv, div_t, ldiv_t, tm struct
############################################################################
v6_stdstrct.o : v6_stdstrct.cxx stdstrct.h $(HEADERS)
	$(CPP) -I../lib/stdstrct $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_stdstrct.cxx

v6_dmystrct.o : v6_dmystrct.cxx $(HEADERS)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_dmystrct.cxx

############################################################################
# Common sources
############################################################################
v6_auxu.o : v6_auxu.cxx $(HEADERS)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_auxu.cxx

v6_cast.o : v6_cast.cxx $(HEADERS) $(SECURITYH)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_cast.cxx

v6_debug.o : v6_debug.cxx $(HEADERS)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_debug.cxx

v6_decl.o : v6_decl.cxx $(HEADERS)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_decl.cxx

v6_disp.o : v6_disp.cxx $(HEADERS)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_disp.cxx

v6_dump.o : v6_dump.cxx $(HEADERS)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_dump.cxx

v6_end.o : v6_end.cxx $(HEADERS) $(SECURITYH)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_end.cxx

v6_error.o : v6_error.cxx $(HEADERS) $(SECURITYH)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_error.cxx

v6_expr.o : v6_expr.cxx $(HEADERS)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_expr.cxx

v6_fread.o : v6_fread.cxx $(HEADERS)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_fread.cxx

v6_func.o : v6_func.cxx $(HEADERS) $(SECURITYH)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_func.cxx

v6_gcoll.o : v6_gcoll.cxx $(HEADERS) $(SECURITYH)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_gcoll.cxx

v6_global1.o : v6_global1.cxx $(HEADERS)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_global1.cxx

v6_global2.o : v6_global2.cxx $(HEADERS) $(SECURITYH)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_global2.cxx

g__cfunc.o : g__cfunc.c $(HEADERS) $(SECURITYH)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c g__cfunc.c

v6_ifunc.o : v6_ifunc.cxx $(HEADERS) $(SECURITYH)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_ifunc.cxx

v6_inherit.o : v6_inherit.cxx $(HEADERS)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_inherit.cxx

v6_init.o : v6_init.cxx $(HEADERS) $(SECURITYH)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_init.cxx

v6_intrpt.o : v6_intrpt.cxx $(HEADERS)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_intrpt.cxx

v6_loadfile.o : v6_loadfile.cxx $(HEADERS) $(SECURITYH)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_loadfile.cxx

v6_macro.o : v6_macro.cxx $(HEADERS)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_macro.cxx

v6_malloc.o : v6_malloc.cxx $(HEADERS)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_malloc.cxx

v6_memtest.o : v6_memtest.cxx $(HEADERS)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_memtest.cxx

v6_new.o : v6_new.cxx $(HEADERS) $(SECURITYH) $(SECURITYH)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_new.cxx

v6_newlink.o : v6_newlink.cxx $(HEADERS) $(DLLREVH)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_newlink.cxx

v6_oldlink.o : v6_oldlink.cxx $(HEADERS)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_oldlink.cxx

v6_opr.o : v6_opr.cxx $(HEADERS) $(SECURITYH)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_opr.cxx

v6_parse.o : v6_parse.cxx $(HEADERS) $(SECURITYH)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_parse.cxx

v6_pause.o : v6_pause.cxx $(HEADERS) $(SECURITYH)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_pause.cxx

v6_pcode.o : v6_pcode.cxx $(HEADERS) bc_exec_asm.h
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_pcode.cxx

v6_pragma.o : v6_pragma.cxx $(HEADERS) $(SECURITYH)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_pragma.cxx

v6_quote.o : v6_quote.cxx $(HEADERS)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_quote.cxx

v6_scrupto.o : v6_scrupto.cxx $(HEADERS) $(SECURITYH)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_scrupto.cxx

v6_sizeof.o : v6_sizeof.cxx $(HEADERS)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_sizeof.cxx

v6_shl.o : v6_shl.cxx $(HEADERS) $(DLLREVH)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_shl.cxx

v6_struct.o : v6_struct.cxx $(HEADERS)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_struct.cxx

v6_stub.o : v6_stub.cxx $(HEADERS)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_stub.cxx

v6_tmplt.o : v6_tmplt.cxx $(HEADERS)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_tmplt.cxx

v6_typedef.o : v6_typedef.cxx $(HEADERS)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_typedef.cxx

v6_val2a.o : v6_val2a.cxx $(HEADERS)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_val2a.cxx

v6_value.o : v6_value.cxx $(HEADERS)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_value.cxx

v6_var.o : v6_var.cxx $(HEADERS) $(SECURITYH)
	$(CPP) $(IPATH) $(MACRO) $(OPTIMIZE) -c v6_var.cxx

############################################################################
# ERTTI API
############################################################################

APIHEADER = Api.h \
	  Class.h \
	  BaseCls.h \
	  Type.h \
	  DataMbr.h \
	  Method.h \
	  MethodAr.h \
	  CallFunc.h \
	  Typedf.h \
	  Apiif.h \
          Token.h \
	  ../G__ci.h

Token.o : $(APIHEADER) Token.cxx
	$(CPP) $(IPATH) $(OPTIMIZE) $(MACRO) -c Token.cxx

Typedf.o : $(APIHEADER) Typedf.cxx
	$(CPP) $(IPATH) $(OPTIMIZE) $(MACRO) -c Typedf.cxx

Class.o : $(APIHEADER) Class.cxx
	$(CPP) $(IPATH) $(OPTIMIZE) $(MACRO) -c Class.cxx

BaseCls.o : $(APIHEADER) BaseCls.cxx
	$(CPP) $(IPATH) $(OPTIMIZE) $(MACRO) -c BaseCls.cxx
	
Type.o : $(APIHEADER) Type.cxx
	$(CPP) $(IPATH) $(OPTIMIZE) $(MACRO) -c Type.cxx

DataMbr.o : $(APIHEADER) DataMbr.cxx
	$(CPP) $(IPATH) $(OPTIMIZE) $(MACRO) -c DataMbr.cxx

Method.o : $(APIHEADER) Method.cxx
	$(CPP) $(IPATH) $(OPTIMIZE) $(MACRO) -c Method.cxx

MethodAr.o : $(APIHEADER) MethodAr.cxx
	$(CPP) $(IPATH) $(OPTIMIZE) $(MACRO) -c MethodAr.cxx

CallFunc.o : $(APIHEADER) CallFunc.cxx
	$(CPP) $(IPATH) $(OPTIMIZE) $(MACRO) -c CallFunc.cxx

Api.o : $(APIHEADER) Api.cxx
	$(CPP) $(IPATH) $(OPTIMIZE) $(MACRO) -c Api.cxx

Apiif.o : $(APIHEADER) Apiif.cxx
	$(CPP) $(IPATH) $(OPTIMIZE) $(MACRO) -c Apiif.cxx

longif.o : $(APIHEADER) longif.cxx
	$(CPP) $(IPATH) $(OPTIMIZE) $(MACRO) -c longif.cxx

longif3.o : $(APIHEADER) longif3.cxx
	$(CPP) $(IPATH) $(OPTIMIZE) $(MACRO) -c longif3.cxx

############################################################################
# Cint6.x Re-engineering
############################################################################

BCHEADER = bc_autoobj.h \
	   bc_cfunc.h \
	   bc_inst.h \
	   bc_parse.h \
	   bc_reader.h \
	   bc_type.h \
	   bc_exec.h \
	   bc_vtbl.h \
	   bc_eh.h \
	   bc_debug.h \
	   bc_assign.h \
	   common.h \
	  ../G__ci.h

bc_autoobj.o : $(APIHEADER) $(BCHEADER) bc_autoobj.cxx
	$(CPP) $(IPATH) $(OPTIMIZE) $(MACRO) -c bc_autoobj.cxx

bc_cfunc.o : $(APIHEADER) $(BCHEADER) bc_cfunc.cxx
	$(CPP) $(IPATH) $(OPTIMIZE) $(MACRO) -c bc_cfunc.cxx

bc_inst.o : $(APIHEADER) $(BCHEADER) bc_inst.cxx
	$(CPP) $(IPATH) $(OPTIMIZE) $(MACRO) -c bc_inst.cxx

bc_parse.o : $(APIHEADER) $(BCHEADER) bc_parse.cxx
	$(CPP) $(IPATH) $(OPTIMIZE) $(MACRO) -c bc_parse.cxx

bc_reader.o : $(APIHEADER) $(BCHEADER) bc_reader.cxx
	$(CPP) $(IPATH) $(OPTIMIZE) $(MACRO) -c bc_reader.cxx

bc_type.o : $(APIHEADER) $(BCHEADER) bc_type.cxx
	$(CPP) $(IPATH) $(OPTIMIZE) $(MACRO) -c bc_type.cxx

bc_exec.o : $(APIHEADER) $(BCHEADER) bc_exec.cxx
	$(CPP) $(IPATH) $(OPTIMIZE) $(MACRO) -c bc_exec.cxx

bc_vtbl.o : $(APIHEADER) $(BCHEADER) bc_vtbl.cxx
	$(CPP) $(IPATH) $(OPTIMIZE) $(MACRO) -c bc_vtbl.cxx

bc_eh.o : $(APIHEADER) $(BCHEADER) bc_eh.cxx
	$(CPP) $(IPATH) $(OPTIMIZE) $(MACRO) -c bc_eh.cxx

bc_debug.o : $(APIHEADER) $(BCHEADER) bc_debug.cxx
	$(CPP) $(IPATH) $(OPTIMIZE) $(MACRO) -c bc_debug.cxx

bc_assign.o : $(APIHEADER) $(BCHEADER) bc_assign.cxx
	$(CPP) $(IPATH) $(OPTIMIZE) $(MACRO) -c bc_assign.cxx

# Not used
bc_dict.o : $(APIHEADER) $(BCHEADER) bc_dict.cxx
	$(CPP) $(IPATH) $(OPTIMIZE) $(MACRO) -c bc_dict.cxx


############################################################################
# clean
############################################################################
clean :
	$(RM) $(OBJECTS) $(CINTLIB) core

